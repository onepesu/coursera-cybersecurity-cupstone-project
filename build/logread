#!/usr/bin/env python3
import os.path
import sys
try:
    from log_libraries import logparser
    from log_libraries import validators
    from log_libraries.utils import LOG_PATH, ValidationError
except ImportError:
    from .log_libraries import logparser
    from .log_libraries import validators
    from .log_libraries.utils import LOG_PATH, ValidationError

full_arguments = sys.argv

if len(full_arguments) < 3:
    print('invalid')
    sys.exit(255)

mapping = {
    '-K': {'name': 'token', 'max_args': 1},
    '-S': {'name': 'status', 'is_flag': True},
    '-R': {'name': 'room_id', 'is_flag': True},
    '-T': {'name': 'total_time', 'is_flag': True},
    '-I': {'name': 'rooms', 'is_flag': True},
    '-E': {'name': 'employee'},
    '-G': {'name': 'guest'}
}

file = full_arguments[-1]
try:
    arguments = logparser.parse_args(full_arguments[1:-1], mapping)
    print(arguments)
    validators.filename_validator(file)
    validators.logread_argument_validator(arguments)
except ValidationError as exc:
    print(exc)
    print('invalid')
    sys.exit(255)

try:
    log_file_name = os.path.join(LOG_PATH, file)
    if not os.path.isfile(log_file_name):
        raise ValidationError('file does not exist')
    token = arguments['token'][0]
    validators.token_validator(log_file_name, token)
except ValidationError as exc:
    print(exc)
    print('security error', file=sys.stderr)
    sys.exit(255)
